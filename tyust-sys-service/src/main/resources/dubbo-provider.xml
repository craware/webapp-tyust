<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:config.properties" />

    <dubbo:application name="${dubbox.application}" owner="programmer" organization="dubbox"/>

	<!-- zookeeper注册中心 -->
    <dubbo:registry address="${dubbox.registry.address}"/>

    <dubbo:annotation package="com.tyust" />
    
    <!-- kryo实现序列化 -->
    <dubbo:protocol name="dubbo" serialization="kryo" optimizer="com.tyust.sys.serial.SerializationOptimizerImpl" />
   
	<!-- rest -->
    <dubbo:protocol name="rest" server="${dubbox.rest.server}" port="${dubbox.rest.port}" contextpath="${dubbox.rest.contextpath}" threads="${dubbox.rest.threads}" accepts="${dubbox.rest.accepts}" />
	
     
   	<!-- 具体的实现bean -->
	<!--
	<bean id="sysUserService" class="SysUserService" />
	--> 
	<!-- 声明需要暴露的服务接口,同时提供本地dubbo方法调用和rest方法调用 -->
	<!--  
	<dubbo:service interface="SysUserFacade" ref="sysUserService" protocol="rest,dubbo" />
	-->
	
	
</beans>